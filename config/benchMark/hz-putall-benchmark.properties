#
# Contains all benchmarks for:
# - ATOMIC operations
# - TRANSACTIONAL operations
# - SQL queries
#

# JVM options.
JVM_OPTS=${JVM_OPTS}" \
  -Xloggc:./gc.log \
  -XX:+PrintGCDetails \
  -verbose:gc \
  -XX:+UseParNewGC \
  -XX:+UseConcMarkSweepGC \
  -XX:+UseTLAB \
  -XX:NewSize=128m \
  -XX:MaxNewSize=128m \
  -XX:MaxTenuringThreshold=0 \
  -XX:SurvivorRatio=1024 \
  -XX:+UseCMSInitiatingOccupancyOnly \
  -XX:CMSInitiatingOccupancyFraction=60 \
"

# List of default probes.
# Add DStatProbe or VmStatProbe if your OS supports it (e.g. if running on Linux).
BENCHMARK_DEFAULT_PROBES=ThroughputLatencyProbe,PercentileProbe,DStatProbe

# Packages where the specified benchmark is searched by reflection mechanism.
BENCHMARK_PACKAGES=org.yardstickframework

# Probe point writer class name.
# BENCHMARK_WRITER=

# Benchmark label.
BENCHMARK_LABEL=hazelcast

# Comma-separated list of the hosts to run BenchmarkServers on. 2 nodes on local host are enabled by default.
SERVER_HOSTS=localhost,localhost,localhost

# Comma-separated list of the hosts to run BenchmarkDrivers on. 1 node on local host is enabled by default.
DRIVER_HOSTS=localhost

# Remote username.
REMOTE_USER=

RESTART_SERVERS=true

# Number of nodes, used to wait for the specified number of nodes to start.
nn=$((`echo ${SERVER_HOSTS} | tr ',' '\n' | wc -l` + `echo ${DRIVER_HOSTS} | tr ',' '\n' | wc -l`))

# Hazelcast version.
ver="hz-3.6"

# Run configuration which contains all benchmarks.
xml=hazelcast.xml
cfg=${SCRIPT_DIR}/../config/${xml}

w=30
d=60

#clientMode="--clientMode"
clientMode=""

default="-sn HazelcastNode -nn ${nn} -w ${w} -d ${d} -t 64 ${clientMode}"

CONFIGS="\
-hzcfg ${cfg} ${default} -b 1 -sb -rb -bs 100   -dn HazelcastPutAllPreparedBenchmark -ds ${ver}-atomic-putAll_batch-100_1-backup,\
-hzcfg ${cfg} ${default} -b 1 -sb -rb -bs 500   -dn HazelcastPutAllPreparedBenchmark -ds ${ver}-atomic-putAll_batch-500_1-backup,\
-hzcfg ${cfg} ${default} -b 1 -sb -rb -bs 1000  -dn HazelcastPutAllPreparedBenchmark -ds ${ver}-atomic-putAll_batch-1000_1-backup,\
-hzcfg ${cfg} ${default} -b 1 -sb -rb -bs 10000 -dn HazelcastPutAllPreparedBenchmark -ds ${ver}-atomic-putAll_batch-10000_1-backup,\
-hzcfg ${cfg} ${default} -b 1 -sb -rb -bs 50000 -dn HazelcastPutAllPreparedBenchmark -ds ${ver}-atomic-putAll_batch-50000_1-backup,\
"
